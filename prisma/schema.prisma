// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  username         String       @unique
  email            String       @unique
  password         String? //optionnal password (site users only)
  googleId         String?      @unique //optionnal (google users only)
  authMethod       AuthMethod
  stats            Stat?
  avatar           String?
  role             Role         @default(USER)
  sentRequests     Friendship[] @relation("FriendshipSender")
  receivedRequests Friendship[] @relation("FriendshipReceiver")

  MatchesAsPlayer1 Match[] @relation("Player1")
  MatchesAsPlayer2 Match[] @relation("Player2")
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  DECLINED
}

enum AuthMethod {
  LOCAL
  GOOGLE
}

enum Role {
  USER
  ADMIN
}

model Stat {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  wins   Int @default(0)
  losses Int @default(0)
  streak Int @default(0)
}

model Friendship {
  id     Int  @id @default(autoincrement())
  user   User @relation("FriendshipSender", fields: [userId], references: [id])
  userId Int

  friend   User @relation("FriendshipReceiver", fields: [friendId], references: [id])
  friendId Int

  status    FriendshipStatus @default(PENDING)
  createdAt DateTime         @default(now())
}

model Match {
  id Int @id @default(autoincrement())

  player1   User @relation("Player1", fields: [player1Id], references: [id])
  player1Id Int

  player2   User @relation("Player2", fields: [player2Id], references: [id])
  player2Id Int

  player1Score Int
  player2Score Int

  status   MatchStatus @default(PENDING)
  playedAt DateTime    @default(now())
}

enum MatchStatus {
  PENDING
  DONE
  CANCELLED
}
